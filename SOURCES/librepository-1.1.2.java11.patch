--- librepository-1.1.3/common_build.xml	2020-05-05 20:00:37.191243154 +0100
+++ librepository-1.1.3/common_build.xml	2020-05-05 20:00:44.344299905 +0100
@@ -136,8 +136,8 @@
   <property name="javac.deprecation"
             value="true"
             description="Indicates whether source should be compiled with deprecation information" />
-  <property name="javac.source" value="1.5" description="Provide source compatibility with specified release" />
-  <property name="javac.target" value="1.5" description="Generate class files for specific VM version" />
+  <property name="javac.source" value="1.6" description="Provide source compatibility with specified release" />
+  <property name="javac.target" value="1.6" description="Generate class files for specific VM version" />
 
   <!-- Build Cache properties -->
   <property name="build.cache.dir"
@@ -1353,13 +1353,11 @@
              nodeprecatedlist="false"
              nodeprecated="false"
              packagenames="${javadoc.packagenames}"
+             excludepackagenames="org.pentaho.reporting.libraries.repository.email.*"
              sourcepath="${src.dir}"
              doctitle="${impl.title} documentation">
       <link href="http://java.sun.com/j2se/${javac.source}.0/docs/api/" />
       <classpath refid="classpath" />
-      <packageset dir="source">
-        <exclude name="org/pentaho/reporting/libraries/repository/email/**"/>
-      </packageset>
     </javadoc>
   </target>
 
--- librepository-1.1.3/source/org/pentaho/reporting/libraries/repository/ContentItem.java	2020-06-10 14:13:04.904250346 +0100
+++ librepository-1.1.3/source/org/pentaho/reporting/libraries/repository/ContentItem.java	2020-06-10 14:12:10.686769515 +0100
@@ -43,7 +43,7 @@
    * Tries to open and return a output stream for writing into the content item. This call will fail if the
    * item is not writeable. Whether opening multiple output streams at the same time is possible is implementation
    * dependent, but it is generally not recommended to try this.
-   * <p/>
+   * <p>
    * Having both an input and output stream open at the same time is not guaranteed to work. Generally if you need
    * to append data, first open the inputstream and copy the content to a temporary location and then write the
    * content along with the appended content to the new output stream. 
@@ -58,7 +58,7 @@
    * Tries to open and return a input stream for reading from the content item. This call will fail if the
    * item is not readable. Whether opening multiple input streams at the same time is possible is implementation
    * dependent.
-   * <p/>
+   * <p>
    * Having both an input and output stream open at the same time is not guaranteed to work. Generally if you need
    * to append data, first open the inputstream and copy the content to a temporary location and then write the
    * content along with the appended content to the new output stream.
--- librepository-1.1.3/source/org/pentaho/reporting/libraries/repository/LibRepositoryBoot.java	2020-06-10 14:13:14.599336328 +0100
+++ librepository-1.1.3/source/org/pentaho/reporting/libraries/repository/LibRepositoryBoot.java	2020-06-10 14:12:10.690769550 +0100
@@ -27,7 +27,7 @@
 /**
  * The LibRepositoryBoot class is used to initialize the library before it is
  * first used. This loads all configurations and initializes all factories.
- * <p/>
+ * <p>
  * Without booting, basic services like logging and the global configuration
  * will not be availble.
  *
--- librepository-1.1.3/source/org/pentaho/reporting/libraries/repository/stream/StreamContentItem.java	2020-06-10 14:13:28.417458875 +0100
+++ librepository-1.1.3/source/org/pentaho/reporting/libraries/repository/stream/StreamContentItem.java	2020-06-10 14:12:10.693769577 +0100
@@ -114,7 +114,7 @@
    * Tries to open and return a output stream for writing into the content item. This call will fail if the
    * item is not writeable. Whether opening multiple output streams at the same time is possible is implementation
    * dependent, but it is generally not recommended to try this.
-   * <p/>
+   * <p>
    * Having both an input and output stream open at the same time is not guaranteed to work. Generally if you need
    * to append data, first open the inputstream and copy the content to a temporary location and then write the
    * content along with the appended content to the new output stream.
@@ -132,7 +132,7 @@
    * Tries to open and return a input stream for reading from the content item. This call will fail if the
    * item is not readable. Whether opening multiple input streams at the same time is possible is implementation
    * dependent.
-   * <p/>
+   * <p>
    * Having both an input and output stream open at the same time is not guaranteed to work. Generally if you need
    * to append data, first open the inputstream and copy the content to a temporary location and then write the
    * content along with the appended content to the new output stream.
